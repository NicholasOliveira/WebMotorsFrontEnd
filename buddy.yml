- pipeline: "CI"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Install Dependencies"
    type: "BUILD"
    working_directory: "/buddy/webmotorsfrontend"
    docker_image_name: "library/node"
    docker_image_tag: "12"
    execute_commands:
    - "npm install yarn"
    - "yarn"
    volume_mappings:
    - "/:/buddy/webmotorsfrontend"
    trigger_condition: "ALWAYS"
    shell: "BASH"
  - action: "Run Sonar and Coverage"
    type: "BUILD"
    working_directory: "/buddy/webmotorsfrontend"
    docker_image_name: "library/node"
    docker_image_tag: "12"
    execute_commands:
    - "export SONAR_SCANNER_VERSION=4.4.0.2170"
    - "export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux"
    - "curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip"
    - "unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/"
    - "export PATH=$SONAR_SCANNER_HOME/bin:$PATH"
    - "export SONAR_SCANNER_OPTS=\"-server\""
    - ""
    - "yarn test --watchAll=false --coverage"
    - "sonar-scanner -X \\"
    - "  -Dsonar.login=$SONAR_TOKEN \\"
    - "  -Dsonar.organization=$SONAR_ORGANIZATION \\"
    - "  -Dsonar.projectKey=$SONAR_PROJECT_KEY \\"
    - "  -Dsonar.sources=$SONAR_SOURCES \\"
    - "  -Dsonar.host.url=$SONAR_HOST_URL \\"
    - "  -Dsonar.test.exclusions=**/styles.js,**/*.config.js,/test-ui.js,src/index.js,src/App.js,/config-overrides.js,src/Components/SearchBar/index.js,src/Components/SearchBar/ProductItem.js \\"
    - "  -Dsonar.coverage.exclusions=**/styles.js,**/*.config.js,/test-ui.js,src/index.js,src/App.js,/config-overrides.js,src/Components/SearchBar/index.js,src/Components/SearchBar/ProductItem.js,src/test-ui.js"
    volume_mappings:
    - "/:/buddy/webmotorsfrontend"
    trigger_condition: "ALWAYS"
    shell: "SH"
  - action: "Send Email notification"
    type: "EMAIL"
    trigger_time: "ON_FAILURE"
    title: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    from_name: "Notification by e-mail in fail"
    content: "Your pipeline $BUDDY_PIPELINE_NAME fail."
    send_as_html: true
    recipients: "grupocesw@gmail.com"
    trigger_condition: "ALWAYS"
  variables:
  - key: "SONAR_TOKEN"
    value: "453348f10683c4cc769cb40d3d2c8a220031e907"
    encrypted: false
  - key: "SONAR_PROJECT_KEY"
    value: "webmotorsfrontend"
    encrypted: false
  - key: "SONAR_ORGANIZATION"
    value: "grupocesw"
    encrypted: false
  - key: "SONAR_HOST_URL"
    value: "https://sonarcloud.io"
    encrypted: false
  - key: "SONAR_SOURCES"
    value: "."
    encrypted: false
- pipeline: "Deploy Homolog"
  trigger_mode: "SCHEDULED"
  ref_name: "develop"
  ref_type: "BRANCH"
  priority: "NORMAL"
  cron: ""
  fetch_all_refs: true
  fail_on_prepare_env_warning: true
  trigger_condition: "SUCCESS_PIPELINE"
  trigger_project_name: "webmotorsfrontend"
  trigger_pipeline_name: "CI"
  actions:
  - action: "Deploy to Heroku Homolog"
    type: "HEROKU"
    application_name: "homolog-webmotorsfrontend"
    trigger_condition: "ALWAYS"
    integration_hash: "5fcbef8e4f636e56e7441fc7"
    use_custom_gitignore: false
    isolated: true
  - action: "Notification by e-mail Homolog"
    type: "EMAIL"
    title: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    from_name: "Manager Project DevOps"
    content: "Deploy to homolog successfully."
    send_as_html: true
    recipients: "grupocesw@gmail.com"
    trigger_condition: "ALWAYS"
  - action: "Send Email notification"
    type: "EMAIL"
    trigger_time: "ON_FAILURE"
    title: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    from_name: "Notification by e-mail in fail"
    content: "Your pipeline $BUDDY_PIPELINE_NAME fail."
    send_as_html: true
    recipients: "grupocesw@gmail.com"
    trigger_condition: "ALWAYS"
- pipeline: "CD"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/tags/*"
  ref_type: "WILDCARD"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Deploy to HEROKU Production"
    type: "HEROKU"
    application_name: "webmotorsfrontend"
    trigger_condition: "ALWAYS"
    integration_hash: "5fcbef8e4f636e56e7441fc7"
    use_custom_gitignore: false
    isolated: true
  - action: "Notification by e-mail Production"
    type: "EMAIL"
    title: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    from_name: "Manager Project DevOps"
    content: "Deploy to production successfully."
    send_as_html: true
    recipients: "grupocesw@gmail.com"
    trigger_condition: "ALWAYS"
  - action: "Send Email notification"
    type: "EMAIL"
    trigger_time: "ON_FAILURE"
    title: "$BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    from_name: "Notification by e-mail in fail"
    content: "Your pipeline $BUDDY_PIPELINE_NAME fail."
    send_as_html: true
    recipients: "grupocesw@gmail.com"
    trigger_condition: "ALWAYS"
  variables:
  - key: "CREATE_REACT_APP_SENTRY"
    value: "https://5d347110ba73444c9efba9448cf1d475@o486613.ingest.sentry.io/5546000"
    encrypted: false
