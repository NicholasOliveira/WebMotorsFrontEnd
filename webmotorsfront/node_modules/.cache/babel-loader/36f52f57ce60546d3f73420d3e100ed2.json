{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getFirstHidden } from './lib/getFirstHidden';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport) {\n  var metric = initMetric('FID');\n  var firstHidden = getFirstHidden();\n\n  var entryHandler = function (entry) {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < firstHidden.timeStamp) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      metric.isFinal = true;\n      report();\n    }\n  };\n\n  var po = observe('first-input', entryHandler);\n  var report = bindReporter(onReport, metric, po);\n\n  if (po) {\n    onHidden(function () {\n      po.takeRecords().map(entryHandler);\n      po.disconnect();\n    }, true);\n  } else {\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      window.perfMetrics.onFirstInputDelay(function (value, event) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (event.timeStamp < firstHidden.timeStamp) {\n          metric.value = value;\n          metric.isFinal = true;\n          metric.entries = [{\n            entryType: 'first-input',\n            name: event.type,\n            target: event.target,\n            cancelable: event.cancelable,\n            startTime: event.timeStamp,\n            processingStart: event.timeStamp + value\n          }];\n          report();\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["../../../src/browser/web-vitals/getFID.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,SAAS,YAAT,QAA6B,oBAA7B;AACA,SAAS,cAAT,QAA+B,sBAA/B;AACA,SAAS,UAAT,QAA2B,kBAA3B;AACA,SAAS,OAAT,QAAiD,eAAjD;AACA,SAAS,QAAT,QAAyB,gBAAzB;AAwBA,OAAO,IAAM,MAAM,GAAG,UAAC,QAAD,EAAwB;AAC5C,MAAM,MAAM,GAAG,UAAU,CAAC,KAAD,CAAzB;AACA,MAAM,WAAW,GAAG,cAAc,EAAlC;;AAEA,MAAM,YAAY,GAAG,UAAC,KAAD,EAA8B;AACjD;AACA,QAAI,KAAK,CAAC,SAAN,GAAkB,WAAW,CAAC,SAAlC,EAA6C;AAC3C,MAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,eAAN,GAAwB,KAAK,CAAC,SAA7C;AACA,MAAA,MAAM,CAAC,OAAP,CAAe,IAAf,CAAoB,KAApB;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,IAAjB;AACA,MAAA,MAAM;AACP;AACF,GARD;;AAUA,MAAM,EAAE,GAAG,OAAO,CAAC,aAAD,EAAgB,YAAhB,CAAlB;AACA,MAAM,MAAM,GAAG,YAAY,CAAC,QAAD,EAAW,MAAX,EAAmB,EAAnB,CAA3B;;AAEA,MAAI,EAAJ,EAAQ;AACN,IAAA,QAAQ,CAAC,YAAA;AACP,MAAA,EAAE,CAAC,WAAH,GAAiB,GAAjB,CAAqB,YAArB;AACA,MAAA,EAAE,CAAC,UAAH;AACD,KAHO,EAGL,IAHK,CAAR;AAID,GALD,MAKO;AACL,QAAI,MAAM,CAAC,WAAP,IAAsB,MAAM,CAAC,WAAP,CAAmB,iBAA7C,EAAgE;AAC9D,MAAA,MAAM,CAAC,WAAP,CAAmB,iBAAnB,CAAqC,UAAC,KAAD,EAAgB,KAAhB,EAA4B;AAC/D;AACA,YAAI,KAAK,CAAC,SAAN,GAAkB,WAAW,CAAC,SAAlC,EAA6C;AAC3C,UAAA,MAAM,CAAC,KAAP,GAAe,KAAf;AACA,UAAA,MAAM,CAAC,OAAP,GAAiB,IAAjB;AACA,UAAA,MAAM,CAAC,OAAP,GAAiB,CACf;AACE,YAAA,SAAS,EAAE,aADb;AAEE,YAAA,IAAI,EAAE,KAAK,CAAC,IAFd;AAGE,YAAA,MAAM,EAAE,KAAK,CAAC,MAHhB;AAIE,YAAA,UAAU,EAAE,KAAK,CAAC,UAJpB;AAKE,YAAA,SAAS,EAAE,KAAK,CAAC,SALnB;AAME,YAAA,eAAe,EAAE,KAAK,CAAC,SAAN,GAAkB;AANrC,WADe,CAAjB;AAUA,UAAA,MAAM;AACP;AACF,OAjBD;AAkBD;AACF;AACF,CA5CM","sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getFirstHidden } from './lib/getFirstHidden';\nimport { initMetric } from './lib/initMetric';\nimport { observe, PerformanceEntryHandler } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { ReportHandler } from './types';\n\ninterface FIDPolyfillCallback {\n  (value: number, event: Event): void;\n}\n\ninterface FIDPolyfill {\n  onFirstInputDelay: (onReport: FIDPolyfillCallback) => void;\n}\n\ndeclare global {\n  interface Window {\n    perfMetrics: FIDPolyfill;\n  }\n}\n\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  cancelable?: boolean;\n  target?: Element;\n}\n\nexport const getFID = (onReport: ReportHandler): void => {\n  const metric = initMetric('FID');\n  const firstHidden = getFirstHidden();\n\n  const entryHandler = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < firstHidden.timeStamp) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      metric.isFinal = true;\n      report();\n    }\n  };\n\n  const po = observe('first-input', entryHandler as PerformanceEntryHandler);\n  const report = bindReporter(onReport, metric, po);\n\n  if (po) {\n    onHidden(() => {\n      po.takeRecords().map(entryHandler as PerformanceEntryHandler);\n      po.disconnect();\n    }, true);\n  } else {\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      window.perfMetrics.onFirstInputDelay((value: number, event: Event) => {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (event.timeStamp < firstHidden.timeStamp) {\n          metric.value = value;\n          metric.isFinal = true;\n          metric.entries = [\n            {\n              entryType: 'first-input',\n              name: event.type,\n              target: event.target,\n              cancelable: event.cancelable,\n              startTime: event.timeStamp,\n              processingStart: event.timeStamp + value,\n            } as PerformanceEventTiming,\n          ];\n          report();\n        }\n      });\n    }\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}