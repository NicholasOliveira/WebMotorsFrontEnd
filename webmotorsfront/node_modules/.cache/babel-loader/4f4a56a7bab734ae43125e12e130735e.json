{"ast":null,"code":"import { getGlobalObject, logger } from '@sentry/utils';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\n\nexport function registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', function () {\n      var activeTransaction = getActiveTransaction();\n\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\"[Tracing] Transaction: \" + SpanStatus.Cancelled + \" -> since tab moved to the background, op: \" + activeTransaction.op); // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}","map":{"version":3,"sources":["../../src/browser/backgroundtab.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,MAA1B,QAAwC,eAAxC;AAGA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,oBAAT,QAAqC,UAArC;AAEA,IAAM,MAAM,GAAG,eAAe,EAA9B;AAEA;;;AAGG;;AACH,OAAM,SAAU,8BAAV,GAAwC;AAC5C,MAAI,MAAM,IAAI,MAAM,CAAC,QAArB,EAA+B;AAC7B,IAAA,MAAM,CAAC,QAAP,CAAgB,gBAAhB,CAAiC,kBAAjC,EAAqD,YAAA;AACnD,UAAM,iBAAiB,GAAG,oBAAoB,EAA9C;;AACA,UAAI,MAAM,CAAC,QAAP,CAAgB,MAAhB,IAA0B,iBAA9B,EAAiD;AAC/C,QAAA,MAAM,CAAC,GAAP,CACE,4BAA0B,UAAU,CAAC,SAArC,GAA8C,6CAA9C,GAA4F,iBAAiB,CAAC,EADhH,EAD+C,CAI/C;AACA;;AACA,YAAI,CAAC,iBAAiB,CAAC,MAAvB,EAA+B;AAC7B,UAAA,iBAAiB,CAAC,SAAlB,CAA4B,UAAU,CAAC,SAAvC;AACD;;AACD,QAAA,iBAAiB,CAAC,MAAlB,CAAyB,kBAAzB,EAA6C,iBAA7C;AACA,QAAA,iBAAiB,CAAC,MAAlB;AACD;AACF,KAdD;AAeD,GAhBD,MAgBO;AACL,IAAA,MAAM,CAAC,IAAP,CAAY,oFAAZ;AACD;AACF","sourcesContent":["import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\n          `[Tracing] Transaction: ${SpanStatus.Cancelled} -> since tab moved to the background, op: ${activeTransaction.op}`,\n        );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}