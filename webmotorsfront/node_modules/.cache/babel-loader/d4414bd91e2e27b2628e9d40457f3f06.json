{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalObject } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nvar global = getGlobalObject();\nvar activeTransaction;\nexport function reactRouterV4Instrumentation(history, routes, matchPath) {\n  return reactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\nexport function reactRouterV5Instrumentation(history, routes, matchPath) {\n  return reactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\n\nfunction reactRouterInstrumentation(history, name, allRoutes, matchPath) {\n  if (allRoutes === void 0) {\n    allRoutes = [];\n  }\n\n  function getName(pathname) {\n    if (allRoutes === [] || !matchPath) {\n      return pathname;\n    }\n\n    var branches = matchRoutes(allRoutes, pathname, matchPath); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (var x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return branches[x].match.path;\n      }\n    }\n\n    return pathname;\n  }\n\n  return function (startTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) {\n      startTransactionOnPageLoad = true;\n    }\n\n    if (startTransactionOnLocationChange === void 0) {\n      startTransactionOnLocationChange = true;\n    }\n\n    if (startTransactionOnPageLoad && global && global.location) {\n      activeTransaction = startTransaction({\n        name: getName(global.location.pathname),\n        op: 'pageload',\n        tags: {\n          'routing.instrumentation': name\n        }\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(function (location, action) {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n\n          var tags = {\n            'routing.instrumentation': name\n          };\n          activeTransaction = startTransaction({\n            name: getName(location.pathname),\n            op: 'navigation',\n            tags: tags\n          });\n        }\n      });\n    }\n  };\n}\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\n\n\nfunction matchRoutes(routes, pathname, matchPath, branch) {\n  if (branch === void 0) {\n    branch = [];\n  }\n\n  routes.some(function (route) {\n    var match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({\n        route: route,\n        match: match\n      });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n  return branch;\n}\n\nfunction computeRootMatch(pathname) {\n  return {\n    path: '/',\n    url: '/',\n    params: {},\n    isExact: pathname === '/'\n  };\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nexport function withSentryRouting(Route) {\n  var componentDisplayName = Route.displayName || Route.name;\n\n  var WrappedRoute = function (props) {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path);\n    }\n\n    return React.createElement(Route, __assign({}, props));\n  };\n\n  WrappedRoute.displayName = \"sentryRoute(\" + componentDisplayName + \")\";\n  hoistNonReactStatics(WrappedRoute, Route);\n  return WrappedRoute;\n}","map":{"version":3,"sources":["../src/reactrouter.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Transaction } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { Action, Location, ReactRouterInstrumentation } from './types';\n\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype Match = { path: string; url: string; params: Record<string, any>; isExact: boolean };\n\nexport type RouterHistory = {\n  location?: Location;\n  listen?(cb: (location: Location, action: Action) => void): void;\n} & Record<string, any>;\n\nexport type RouteConfig = {\n  [propName: string]: any;\n  path?: string | string[];\n  exact?: boolean;\n  component?: JSX.Element;\n  routes?: RouteConfig[];\n};\n\ninterface RouteProps {\n  [propName: string]: any;\n  location?: Location;\n  component?: React.ComponentType<any> | React.ComponentType<any>;\n  render?: (props: any) => React.ReactNode;\n  children?: ((props: any) => React.ReactNode) | React.ReactNode;\n  path?: string | string[];\n  exact?: boolean;\n  sensitive?: boolean;\n  strict?: boolean;\n}\n\ntype MatchPath = (pathname: string, props: string | string[] | any, parent?: Match | null) => Match | null;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst global = getGlobalObject<Window>();\n\nlet activeTransaction: Transaction | undefined;\n\nexport function reactRouterV4Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return reactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\n\nexport function reactRouterV5Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return reactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\n\nfunction reactRouterInstrumentation(\n  history: RouterHistory,\n  name: string,\n  allRoutes: RouteConfig[] = [],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  function getName(pathname: string): string {\n    if (allRoutes === [] || !matchPath) {\n      return pathname;\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return branches[x].match.path;\n      }\n    }\n\n    return pathname;\n  }\n\n  return (startTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true): void => {\n    if (startTransactionOnPageLoad && global && global.location) {\n      activeTransaction = startTransaction({\n        name: getName(global.location.pathname),\n        op: 'pageload',\n        tags: {\n          'routing.instrumentation': name,\n        },\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          const tags = {\n            'routing.instrumentation': name,\n          };\n\n          activeTransaction = startTransaction({\n            name: getName(location.pathname),\n            op: 'navigation',\n            tags,\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes: RouteConfig[],\n  pathname: string,\n  matchPath: MatchPath,\n  branch: Array<{ route: RouteConfig; match: Match }> = [],\n): Array<{ route: RouteConfig; match: Match }> {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match // use parent match\n      : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname: string): Match {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentryRouting<P extends RouteProps & Record<string, any>>(\n  Route: React.ComponentType<P>,\n): React.FC<P> {\n  const componentDisplayName = Route.displayName || Route.name;\n\n  const WrappedRoute: React.FC<P> = (props: P) => {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path);\n    }\n    return <Route {...props} />;\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  return WrappedRoute;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}