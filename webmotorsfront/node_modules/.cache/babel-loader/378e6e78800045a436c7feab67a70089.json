{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { onHidden } from './onHidden';\nvar firstHiddenTime;\nexport var getFirstHidden = function () {\n  if (firstHiddenTime === undefined) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = document.visibilityState === 'hidden' ? 0 : Infinity; // Update the time if/when the document becomes hidden.\n\n    onHidden(function (_a) {\n      var timeStamp = _a.timeStamp;\n      return firstHiddenTime = timeStamp;\n    }, true);\n  }\n\n  return {\n    get timeStamp() {\n      return firstHiddenTime;\n    }\n\n  };\n};","map":{"version":3,"sources":["../../../../src/browser/web-vitals/lib/getFirstHidden.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,SAAS,QAAT,QAAyB,YAAzB;AAEA,IAAI,eAAJ;AAMA,OAAO,IAAM,cAAc,GAAG,YAAA;AAC5B,MAAI,eAAe,KAAK,SAAxB,EAAmC;AACjC;AACA;AACA;AACA;AACA,IAAA,eAAe,GAAG,QAAQ,CAAC,eAAT,KAA6B,QAA7B,GAAwC,CAAxC,GAA4C,QAA9D,CALiC,CAOjC;;AACA,IAAA,QAAQ,CAAC,UAAC,EAAD,EAAc;UAAX,SAAA,GAAA,EAAA,CAAA,S;AAAgB,aAAC,eAAe,GAAG,SAAnB;AAA6B,KAAjD,EAAmD,IAAnD,CAAR;AACD;;AAED,SAAO;AACL,QAAI,SAAJ,GAAa;AACX,aAAO,eAAP;AACD;;AAHI,GAAP;AAKD,CAjBM","sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime: number;\n\ntype HiddenType = {\n  readonly timeStamp: number;\n};\n\nexport const getFirstHidden = (): HiddenType => {\n  if (firstHiddenTime === undefined) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = document.visibilityState === 'hidden' ? 0 : Infinity;\n\n    // Update the time if/when the document becomes hidden.\n    onHidden(({ timeStamp }) => (firstHiddenTime = timeStamp), true);\n  }\n\n  return {\n    get timeStamp() {\n      return firstHiddenTime;\n    },\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}