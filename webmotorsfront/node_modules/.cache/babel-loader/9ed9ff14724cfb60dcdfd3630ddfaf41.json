{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, po, observeAllUpdates) {\n  var prevValue;\n  return function () {\n    if (po && metric.isFinal) {\n      po.disconnect();\n    }\n\n    if (metric.value >= 0) {\n      if (observeAllUpdates || metric.isFinal || document.visibilityState === 'hidden') {\n        metric.delta = metric.value - (prevValue || 0); // Report the metric if there's a non-zero delta, if the metric is\n        // final, or if no previous value exists (which can happen in the case\n        // of the document becoming hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n\n        if (metric.delta || metric.isFinal || prevValue === undefined) {\n          callback(metric);\n          prevValue = metric.value;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["../../../../src/browser/web-vitals/lib/bindReporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAIH,OAAO,IAAM,YAAY,GAAG,UAC1B,QAD0B,EAE1B,MAF0B,EAG1B,EAH0B,EAI1B,iBAJ0B,EAIC;AAE3B,MAAI,SAAJ;AACA,SAAO,YAAA;AACL,QAAI,EAAE,IAAI,MAAM,CAAC,OAAjB,EAA0B;AACxB,MAAA,EAAE,CAAC,UAAH;AACD;;AACD,QAAI,MAAM,CAAC,KAAP,IAAgB,CAApB,EAAuB;AACrB,UAAI,iBAAiB,IAAI,MAAM,CAAC,OAA5B,IAAuC,QAAQ,CAAC,eAAT,KAA6B,QAAxE,EAAkF;AAChF,QAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAP,IAAgB,SAAS,IAAI,CAA7B,CAAf,CADgF,CAGhF;AACA;AACA;AACA;;AACA,YAAI,MAAM,CAAC,KAAP,IAAgB,MAAM,CAAC,OAAvB,IAAkC,SAAS,KAAK,SAApD,EAA+D;AAC7D,UAAA,QAAQ,CAAC,MAAD,CAAR;AACA,UAAA,SAAS,GAAG,MAAM,CAAC,KAAnB;AACD;AACF;AACF;AACF,GAlBD;AAmBD,CA1BM","sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Metric, ReportHandler } from '../types';\n\nexport const bindReporter = (\n  callback: ReportHandler,\n  metric: Metric,\n  po: PerformanceObserver | undefined,\n  observeAllUpdates?: boolean,\n): (() => void) => {\n  let prevValue: number;\n  return () => {\n    if (po && metric.isFinal) {\n      po.disconnect();\n    }\n    if (metric.value >= 0) {\n      if (observeAllUpdates || metric.isFinal || document.visibilityState === 'hidden') {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta, if the metric is\n        // final, or if no previous value exists (which can happen in the case\n        // of the document becoming hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || metric.isFinal || prevValue === undefined) {\n          callback(metric);\n          prevValue = metric.value;\n        }\n      }\n    }\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}