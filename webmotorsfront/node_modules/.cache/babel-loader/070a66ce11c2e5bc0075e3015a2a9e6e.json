{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';export function LabelMarca(_ref){var makes=_ref.makes,searchModel=_ref.searchModel;return/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"Marca\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Marca:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"Marca\",id:\"Marca\",onChange:searchModel,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todas\"}),makes.map(function(make){return/*#__PURE__*/_jsx(\"option\",{value:make.ID,children:make.Name},make.ID);})]})]});}export function LabelModel(_ref2){var models=_ref2.models,searchVersion=_ref2.searchVersion;return/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"models\",style:{marginRight:0},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Modelo:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"models\",onChange:searchVersion,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todos\"}),models.map(function(model){return/*#__PURE__*/_jsx(\"option\",{value:model.ID,children:model.Name},model.ID);})]})]});}export function LabelVersion(_ref3){var versions=_ref3.versions;var ver=[];if(typeof versions!=='undefined'){ver=versions;}return/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"versions\",style:{marginRight:0},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Vers\\xE3o:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"versions\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todas\"}),ver.map(function(version){return/*#__PURE__*/_jsx(\"option\",{value:version.ID,children:version.Name},version.ID);})]})]});}","map":{"version":3,"sources":["/Users/imac20/Desktop/WebMotorsFrontEnd/webmotorsfront/src/Components/SearchBar/DynamicLabels.js"],"names":["React","LabelMarca","makes","searchModel","map","make","ID","Name","LabelModel","models","searchVersion","marginRight","model","LabelVersion","versions","ver","version"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,SAASC,CAAAA,UAAT,MAAgD,IAA1BC,CAAAA,KAA0B,MAA1BA,KAA0B,CAAnBC,WAAmB,MAAnBA,WAAmB,CACrD,mBACE,eAAO,OAAO,CAAC,OAAf,wBACE,gCADF,cAEE,gBAAQ,IAAI,CAAC,OAAb,CAAqB,EAAE,CAAC,OAAxB,CAAgC,QAAQ,CAAEA,WAA1C,wBACE,eAAQ,KAAK,CAAC,EAAd,mBADF,CAEGD,KAAK,CAACE,GAAN,CAAU,SAACC,IAAD,qBACT,eAAsB,KAAK,CAAEA,IAAI,CAACC,EAAlC,UACGD,IAAI,CAACE,IADR,EAAaF,IAAI,CAACC,EAAlB,CADS,EAAV,CAFH,GAFF,GADF,CAaD,CAED,MAAO,SAASE,CAAAA,UAAT,OAAmD,IAA7BC,CAAAA,MAA6B,OAA7BA,MAA6B,CAArBC,aAAqB,OAArBA,aAAqB,CACxD,mBACE,eAAO,OAAO,CAAC,QAAf,CAAwB,KAAK,CAAE,CAAEC,WAAW,CAAE,CAAf,CAA/B,wBACE,iCADF,cAEE,gBAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAED,aAAhC,wBACE,eAAQ,KAAK,CAAC,EAAd,mBADF,CAEGD,MAAM,CAACL,GAAP,CAAW,SAACQ,KAAD,qBACV,eAAuB,KAAK,CAAEA,KAAK,CAACN,EAApC,UACGM,KAAK,CAACL,IADT,EAAaK,KAAK,CAACN,EAAnB,CADU,EAAX,CAFH,GAFF,GADF,CAaD,CAED,MAAO,SAASO,CAAAA,YAAT,OAAwC,IAAhBC,CAAAA,QAAgB,OAAhBA,QAAgB,CAC7C,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAI,MAAOD,CAAAA,QAAP,GAAoB,WAAxB,CAAqC,CACnCC,GAAG,CAAGD,QAAN,CACD,CACD,mBACE,eAAO,OAAO,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEH,WAAW,CAAE,CAAf,CAAjC,wBACE,oCADF,cAEE,gBAAQ,IAAI,CAAC,UAAb,wBACE,eAAQ,KAAK,CAAC,EAAd,mBADF,CAEGI,GAAG,CAACX,GAAJ,CAAQ,SAACY,OAAD,qBACP,eAAyB,KAAK,CAAEA,OAAO,CAACV,EAAxC,UACGU,OAAO,CAACT,IADX,EAAaS,OAAO,CAACV,EAArB,CADO,EAAR,CAFH,GAFF,GADF,CAaD","sourcesContent":["import React from 'react';\n\nexport function LabelMarca({ makes, searchModel }:any) {\n  return (\n    <label htmlFor=\"Marca\">\n      <span>Marca:</span>\n      <select name=\"Marca\" id=\"Marca\" onChange={searchModel}>\n        <option value=\"\">Todas</option>\n        {makes.map((make) => (\n          <option key={make.ID} value={make.ID}>\n            {make.Name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nexport function LabelModel({ models, searchVersion }:any) {\n  return (\n    <label htmlFor=\"models\" style={{ marginRight: 0 }}>\n      <span>Modelo:</span>\n      <select name=\"models\" onChange={searchVersion}>\n        <option value=\"\">Todos</option>\n        {models.map((model) => (\n          <option key={model.ID} value={model.ID}>\n            {model.Name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nexport function LabelVersion({ versions }:any) {\n  let ver = [];\n  if (typeof versions !== 'undefined') {\n    ver = versions;\n  }\n  return (\n    <label htmlFor=\"versions\" style={{ marginRight: 0 }}>\n      <span>Vers√£o:</span>\n      <select name=\"versions\">\n        <option value=\"\">Todas</option>\n        {ver.map((version) => (\n          <option key={version.ID} value={version.ID}>\n            {version.Name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}