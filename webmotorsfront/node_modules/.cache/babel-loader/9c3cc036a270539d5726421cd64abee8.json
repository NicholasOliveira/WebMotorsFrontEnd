{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar isUnloading = false;\nvar listenersAdded = false;\n\nvar onPageHide = function (event) {\n  isUnloading = !event.persisted;\n};\n\nvar addListeners = function () {\n  addEventListener('pagehide', onPageHide); // `beforeunload` is needed to fix this bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=987409\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n  addEventListener('beforeunload', function () {});\n};\n\nexport var onHidden = function (cb, once) {\n  if (once === void 0) {\n    once = false;\n  }\n\n  if (!listenersAdded) {\n    addListeners();\n    listenersAdded = true;\n  }\n\n  addEventListener('visibilitychange', function (_a) {\n    var timeStamp = _a.timeStamp;\n\n    if (document.visibilityState === 'hidden') {\n      cb({\n        timeStamp: timeStamp,\n        isUnloading: isUnloading\n      });\n    }\n  }, {\n    capture: true,\n    once: once\n  });\n};","map":{"version":3,"sources":["../../../../src/browser/web-vitals/lib/onHidden.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAOH,IAAI,WAAW,GAAG,KAAlB;AACA,IAAI,cAAc,GAAG,KAArB;;AAEA,IAAM,UAAU,GAAG,UAAC,KAAD,EAA2B;AAC5C,EAAA,WAAW,GAAG,CAAC,KAAK,CAAC,SAArB;AACD,CAFD;;AAIA,IAAM,YAAY,GAAG,YAAA;AACnB,EAAA,gBAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,CADmB,CAGnB;AACA;AACA;;AACA,EAAA,gBAAgB,CAAC,cAAD,EAAiB,YAAA,CAAQ,CAAzB,CAAhB;AACD,CAPD;;AASA,OAAO,IAAM,QAAQ,GAAG,UAAC,EAAD,EAAuB,IAAvB,EAAmC;AAAZ,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,KAAA;AAAY;;AACzD,MAAI,CAAC,cAAL,EAAqB;AACnB,IAAA,YAAY;AACZ,IAAA,cAAc,GAAG,IAAjB;AACD;;AAED,EAAA,gBAAgB,CACd,kBADc,EAEd,UAAC,EAAD,EAAc;QAAX,SAAA,GAAA,EAAA,CAAA,S;;AACD,QAAI,QAAQ,CAAC,eAAT,KAA6B,QAAjC,EAA2C;AACzC,MAAA,EAAE,CAAC;AAAE,QAAA,SAAS,EAAA,SAAX;AAAa,QAAA,WAAW,EAAA;AAAxB,OAAD,CAAF;AACD;AACF,GANa,EAOd;AAAE,IAAA,OAAO,EAAE,IAAX;AAAiB,IAAA,IAAI,EAAA;AAArB,GAPc,CAAhB;AASD,CAfM","sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface OnHiddenCallback {\n  // TODO(philipwalton): add `isPersisted` if needed for bfcache.\n  ({ timeStamp, isUnloading }: { timeStamp: number; isUnloading: boolean }): void;\n}\n\nlet isUnloading = false;\nlet listenersAdded = false;\n\nconst onPageHide = (event: PageTransitionEvent): void => {\n  isUnloading = !event.persisted;\n};\n\nconst addListeners = (): void => {\n  addEventListener('pagehide', onPageHide);\n\n  // `beforeunload` is needed to fix this bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=987409\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  addEventListener('beforeunload', () => {});\n};\n\nexport const onHidden = (cb: OnHiddenCallback, once = false): void => {\n  if (!listenersAdded) {\n    addListeners();\n    listenersAdded = true;\n  }\n\n  addEventListener(\n    'visibilitychange',\n    ({ timeStamp }) => {\n      if (document.visibilityState === 'hidden') {\n        cb({ timeStamp, isUnloading });\n      }\n    },\n    { capture: true, once },\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}